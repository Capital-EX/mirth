
# Basic definitions.

let(trip, dup dup)
let(nip,  swap drop)
let(tuck, dup dip(swap))
let(over, dip(dup) swap)
let(rotr, swap dip(swap))
let(rotl, dip(swap) swap)

let(dup2,  over over)
let(drop2, drop drop)
let(swap2, dip(rotr) rotr)
#let(dip2(f), dip(dip(f)))
let(trip2, dup2 dup2)
let(nip2,  swap2 drop2)
let(tuck2, dup2 dip(dip(swap2)))
let(over2, dip(dip(dup2)) swap2)
let(rotr2, swap2 dip(dip(swap2)))
let(rotl2, dip(dip(swap2)) swap2)


test(1 2 3 + +, 6)



